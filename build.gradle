apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.7
group = "com.victorsima"
archivesBaseName = "uber-java-client"
version = '0.0.3-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'commons-io:commons-io:2.4'
    //compile 'com.netflix.rxjava:rxjava-core:0.17.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'net.sourceforge.htmlunit:htmlunit:2.15'
}
test {
    scanForTestClasses false
    include '**/MockServerTestSuite.class'
    testLogging {
        events 'started', 'passed', 'failed', 'skipped'
    }
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

task testSandbox(type: Test) {
    scanForTestClasses false
    include '**/SandboxServerTestSuite.class'
    testLogging {
        events 'started', 'passed', 'failed', 'skipped'
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
    signing {
        sign configurations.archives
    }
}

if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {

                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Uber java REST Api client'
                    packaging 'jar'
                    description 'uber-java-client'
                    url 'https://github.com/vsima/uber-java-client'

                    scm {
                        connection 'scm:git:git@github.com:vsima/uber-java-client.git'
                        developerConnection 'scm:git:git@github.com:vsima/uber-java-client.git'
                        url 'git@github.com:vsima/uber-java-client.git'
                    }

                    licenses {
                        license {
                            name 'The MIT License (MIT)'
                            url 'http://opensource.org/licenses/MIT'
                        }
                    }

                    developers {
                        developer {
                            id 'vsima'
                            name 'Victor Sima'
                            email 'vic.sima@gmail.com'
                        }
                    }
                }
            }
        }
    }
}
